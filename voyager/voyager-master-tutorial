For Windows machines CPU Virtualisation needs to be enabled in order to run docker, you can check by opening
	Task Manager > Performance > CPU > Virtualisation CPU 
		( This setting is enabled from BIOS - Intel Virtualisation ) 

Control Panel > Programs and Features >Turn windows features on or off
	> WSL Checked
	> Virtual Machine Platform Windows Checked
	
Check windows version (min version 1903 as od 12.01)
	Winver
	
If version 2 isnt default download WSL 2 update
	https://learn.microsoft.com/en-us/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package
	https://learn.microsoft.com/en-us/windows/wsl/install
		Clickable executable .msi

Execute in Powershell:
	wsl --set-default-version 2

Download Ubuntu 20.04 LTS Version  
	wsl --install -d Ubuntu-20.04
	wsl -l -v 

Start Ubuntu.exe ( From Windows Start )
	Register new Unix Username:
		Username: digitex
		Password: default

Install Docker Desktop
	Use WSL version 2 instead of hyperv
	Use the WSL 2 based engine CHECKED
	Use Docker Compose V2
	Resources -> WSL Integration -> Ubuntu 20.04

Install VSC

Install Git
	in Windows
		https://git-scm.com/download/win

Limit WSL RAM
	In PowerShell:
		wsl --shutdown
		notepad "$env:USERPROFILE/.wslconfig"  
			[wsl2]
			memory=6GB 
			processors=4

In Ubuntu:
	free -h giga

Create folder named “Voyager” in root
	In Ubuntu:
		cd /mnt/c/Voyager
		
		Make sure to copy HTTPS link, not SSH
			git clone https://github.com/digitexdev/voyager-dev-environment.git
				Username and TOKEN (not password)
					Make sure to give all permission to token
			
			cd voyager-dev-environment
				Git clone https://github.com/digitexdev/voyager-backend.git
				Git clone https://github.com/digitexdev/voyager-frontend.git
			
			Copy env variables to appropriate folders
				Rename to “.env”
					note: on 20.04 VM there was problem with backend env file : remove indentations from variables (var = value) -> (var=value)
				If scripts dont work try normalizing all .env files with:
					sed -i -e 's/\r$//' [NAME OF ENV SHELL SCRIPT]
				On arch problematic ports from x:x to x
					example: 8080:8080 -> 8080
			
			sudo cat /etc/group | grep -i "shuttler"
			sudo cat /etc/group | grep -i "docker"
			sudo groupadd docker
			sudo usermod -aG docker shuttler
			RESTART
			
			sudo pacman -S docker docker-compose

			docker login ghcr.io
				dev@digitex.me
				799726b74ecb9fc53653ca95d2a33f71b05e0db4
			
			Run in new instance of Ubuntu
				Run “sudo sh” [OR] "sudo su" ??? and ENTER  ( Ubuntu ) 
					while : ; do eval $(cat /usr/src/pipes/hostpipe); done
			
			Cd in voyager-dev-endironment  ( Ubuntu )
				docker-compose up --build [OR] docker compose up --build


---------------------------------------------------------------------------------------------------------------------------------------

david-paun : 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
